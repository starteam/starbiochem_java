/* Generated by star.annotations.GeneratedClass, all changes will be lost */

package app;

public abstract class ErrorDialogHandler_generated extends java.lang.Object implements events.ErrorDialogRaiser, star.event.EventController, star.event.Listener
{
	private star.event.Adapter adapter;
	private static final long serialVersionUID = 1L;

	public  ErrorDialogHandler_generated()
	{
		super();
	}
	 
	public void addNotify()
	{
		getAdapter().addHandled(events.ErrorDialogEvent.class);
		getAdapter().addHandled(star.events.common.DistributionExceptionEvent.class);
	}
	 
	public void eventRaised(final star.event.Event event)
	{
		eventRaisedHandles(event);
	}
	 
	private void eventRaisedHandles(final star.event.Event event)
	{
		if( event.getClass().getName().equals( "events.ErrorDialogEvent" ) && event.isValid() ) 
		{
			 utils.Runner.runOnThread(new Runnable() { public void run() { 
			 long start = System.nanoTime();
			openErrorDialog( (events.ErrorDialogRaiser)event.getSource());
			 long end = System.nanoTime();
			 if( end - start > 500000000 ) { System.out.println( this.getClass().getName() + ".openErrorDialog "  + ( end-start )/1000000 ); } }},this,2);
		}if( event.getClass().getName().equals( "star.events.common.DistributionExceptionEvent" ) && event.isValid() ) 
		{
			(new events.ErrorDialogEvent(this,false)).raise();
		 utils.Runner.runOnThread(new Runnable() { public void run() { 
			 long start = System.nanoTime();
			openErrorDialogOnDistributionException( (star.events.common.DistributionExceptionRaiser)event.getSource());
			 long end = System.nanoTime();
			 if( end - start > 500000000 ) { System.out.println( this.getClass().getName() + ".openErrorDialogOnDistributionException "  + ( end-start )/1000000 ); } }},this,2);
		}
	}
	 
	public star.event.Adapter getAdapter()
	{
		if( adapter == null )
		{
			adapter = new star.event.Adapter(this);
		}
		return adapter;
	}
	 
	abstract void openErrorDialog(events.ErrorDialogRaiser r);
	 
	abstract void openErrorDialogOnDistributionException(star.events.common.DistributionExceptionRaiser r);
	 
	public void raise_ErrorDialogEvent()
	{
		(new events.ErrorDialogEvent(this)).raise();
	}
	 
	public void removeNotify()
	{
		getAdapter().removeHandled(events.ErrorDialogEvent.class);
		getAdapter().removeHandled(star.events.common.DistributionExceptionEvent.class);
	}
	 
}
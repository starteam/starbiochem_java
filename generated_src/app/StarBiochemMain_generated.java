/* Generated by star.annotations.GeneratedClass, all changes will be lost */

package app;

public abstract class StarBiochemMain_generated extends javax.swing.JFrame implements app.signal.CloseAllMoleculesRaiser, app.signal.CloseMoleculeRaiser, app.signal.FileOpenRaiser, app.signal.FileSaveImageRaiser, app.signal.ImportOpenRaiser, app.signal.MoleculesBackgroundColorRaiser, app.signal.ResetAllMoleculesRaiser, app.signal.ResetMoleculeRaiser, app.signal.ResetSceneRaiser, app.signal.TrackGlassPaneRaiser, app.signal.ViewBackgroundColorRaiser, app.signal.ViewForegroundColorRaiser, app.signal.ViewHydrogensRaiser, app.signal.ViewRegionAndCenterRaiser, app.signal.ViewStructureOptionsRaiser, molecule.ui.signal.MoleculeJmolRenderingPropertiesRaiser, molecule.ui.signal.RenderingInfoRaiser, star.event.EventController
{
	private star.event.Adapter adapter;
	private java.util.prefs.Preferences preferences = null;
	private static final long serialVersionUID = 1L;

	public  StarBiochemMain_generated() throws java.awt.HeadlessException
	{
		super();
	}
	 
	public  StarBiochemMain_generated(java.awt.GraphicsConfiguration graphicsConfiguration)
	{
		super( graphicsConfiguration);
	}
	 
	public  StarBiochemMain_generated(java.lang.String string, java.awt.GraphicsConfiguration graphicsConfiguration)
	{
		super( string,graphicsConfiguration);
	}
	 
	public  StarBiochemMain_generated(java.lang.String string) throws java.awt.HeadlessException
	{
		super( string);
	}
	 
	public void addNotify()
	{
		super.addNotify();
	}
	 
	public star.event.Adapter getAdapter()
	{
		if( adapter == null )
		{
			adapter = new star.event.Adapter(this);
		}
		return adapter;
	}
	 
	public java.util.prefs.Preferences getPreferences(java.lang.String name)
	{
		try
		{
			plugin.preferences.Preferences pref = (plugin.preferences.Preferences) plugin.Loader.getDefaultLoader().getPlugin(plugin.preferences.Preferences.class.getName(), plugin.preferences.PreferencesImplementation.class.getName());
			this.preferences = pref.getPreferences(name);
		}
		catch( plugin.PluginException ex )
		{
			ex.printStackTrace();
		}
		return preferences;
	}
	 
	public java.util.prefs.Preferences getPreferences()
	{
		if( preferences == null )
		{
			try
			{
				plugin.preferences.Preferences pref = (plugin.preferences.Preferences) plugin.Loader.getDefaultLoader().getPlugin(plugin.preferences.Preferences.class.getName(), plugin.preferences.PreferencesImplementation.class.getName());
				this.preferences = pref.getPreferences("app.StarBiochemMain");
			}
			catch( plugin.PluginException ex )
			{
				ex.printStackTrace();
			}
		}
		return preferences;
	}
	 
	public void raise_CloseAllMoleculesEvent()
	{
		(new app.signal.CloseAllMoleculesEvent(this)).raise();
	}
	 
	public void raise_CloseMoleculeEvent()
	{
		(new app.signal.CloseMoleculeEvent(this)).raise();
	}
	 
	public void raise_FileOpenEvent()
	{
		(new app.signal.FileOpenEvent(this)).raise();
	}
	 
	public void raise_FileSaveImageEvent()
	{
		(new app.signal.FileSaveImageEvent(this)).raise();
	}
	 
	public void raise_ImportOpenEvent()
	{
		(new app.signal.ImportOpenEvent(this)).raise();
	}
	 
	public void raise_MoleculeJmolRenderingPropertiesEvent()
	{
		(new molecule.ui.signal.MoleculeJmolRenderingPropertiesEvent(this)).raise();
	}
	 
	public void raise_MoleculesBackgroundColorEvent()
	{
		(new app.signal.MoleculesBackgroundColorEvent(this)).raise();
	}
	 
	public void raise_RenderingInfoEvent()
	{
		(new molecule.ui.signal.RenderingInfoEvent(this)).raise();
	}
	 
	public void raise_ResetAllMoleculesEvent()
	{
		(new app.signal.ResetAllMoleculesEvent(this)).raise();
	}
	 
	public void raise_ResetMoleculeEvent()
	{
		(new app.signal.ResetMoleculeEvent(this)).raise();
	}
	 
	public void raise_ResetSceneEvent()
	{
		(new app.signal.ResetSceneEvent(this)).raise();
	}
	 
	public void raise_TrackGlassPaneEvent()
	{
		(new app.signal.TrackGlassPaneEvent(this)).raise();
	}
	 
	public void raise_ViewBackgroundColorEvent()
	{
		(new app.signal.ViewBackgroundColorEvent(this)).raise();
	}
	 
	public void raise_ViewForegroundColorEvent()
	{
		(new app.signal.ViewForegroundColorEvent(this)).raise();
	}
	 
	public void raise_ViewHydrogensEvent()
	{
		(new app.signal.ViewHydrogensEvent(this)).raise();
	}
	 
	public void raise_ViewRegionAndCenterEvent()
	{
		(new app.signal.ViewRegionAndCenterEvent(this)).raise();
	}
	 
	public void raise_ViewStructureOptionsEvent()
	{
		(new app.signal.ViewStructureOptionsEvent(this)).raise();
	}
	 
	public void removeNotify()
	{
		super.removeNotify();
	}
	 
}
/* Generated by star.annotations.GeneratedClass, all changes will be lost */

package molecule.ui.info;

public abstract class InfoPanelContents_generated extends javax.swing.JEditorPane implements star.event.EventController
{
	private star.event.Adapter adapter;
	private java.util.prefs.Preferences preferences = null;
	private static final long serialVersionUID = 1L;

	public  InfoPanelContents_generated()
	{
		super();
	}
	 
	public  InfoPanelContents_generated(java.lang.String string, java.lang.String string0)
	{
		super( string,string0);
	}
	 
	public  InfoPanelContents_generated(java.lang.String string) throws java.io.IOException
	{
		super( string);
	}
	 
	public  InfoPanelContents_generated(java.net.URL uRL) throws java.io.IOException
	{
		super( uRL);
	}
	 
	public void addNotify()
	{
		super.addNotify();
	}
	 
	public star.event.Adapter getAdapter()
	{
		if( adapter == null )
		{
			adapter = new star.event.Adapter(this);
		}
		return adapter;
	}
	 
	public java.util.prefs.Preferences getPreferences(java.lang.String name)
	{
		try
		{
			plugin.preferences.Preferences pref = (plugin.preferences.Preferences) plugin.Loader.getDefaultLoader().getPlugin(plugin.preferences.Preferences.class.getName(), plugin.preferences.PreferencesImplementation.class.getName());
			this.preferences = pref.getPreferences(name);
		}
		catch( plugin.PluginException ex )
		{
			ex.printStackTrace();
		}
		return preferences;
	}
	 
	public java.util.prefs.Preferences getPreferences()
	{
		if( preferences == null )
		{
			try
			{
				plugin.preferences.Preferences pref = (plugin.preferences.Preferences) plugin.Loader.getDefaultLoader().getPlugin(plugin.preferences.Preferences.class.getName(), plugin.preferences.PreferencesImplementation.class.getName());
				this.preferences = pref.getPreferences("molecule.ui.info.InfoPanelContents");
			}
			catch( plugin.PluginException ex )
			{
				ex.printStackTrace();
			}
		}
		return preferences;
	}
	 
	public void removeNotify()
	{
		super.removeNotify();
	}
	 
}
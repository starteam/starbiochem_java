/* Generated by star.annotations.GeneratedClass, all changes will be lost */

package molecule.ui.protein.tertiary;

public abstract class ProteinTertiaryPanel_generated extends molecule.ui.AbstractMoleculeUI implements molecule.ui.signal.RenderingInfoRaiser, star.event.EventController, star.event.Listener
{
	private java.util.prefs.Preferences preferences = null;
	private static final long serialVersionUID = 1L;

	public  ProteinTertiaryPanel_generated()
	{
		super();
	}
	 
	public void addNotify()
	{
		super.addNotify();
		getAdapter().addHandled(molecule.ui.protein.tertiary.signal.ProteinTertiaryHBondTranslucencyEvent.class);
		getAdapter().addHandled(molecule.ui.protein.tertiary.signal.ProteinTertiaryFilterEvent.class);
		getAdapter().addHandled(molecule.ui.protein.tertiary.signal.ProteinTertiarySSBondSizeEvent.class);
		getAdapter().addHandled(molecule.ui.protein.tertiary.signal.ProteinTertiarySelectionEvent.class);
		getAdapter().addHandled(molecule.ui.protein.primary.signal.ProteinPrimaryFilterEvent.class);
		getAdapter().addHandled(molecule.ui.protein.tertiary.signal.ProteinTertiaryApplyRenderingEvent.class);
		getAdapter().addHandled(molecule.ui.protein.primary.signal.ProteinPrimaryRenderingModeEvent.class);
		getAdapter().addHandled(molecule.ui.protein.tertiary.signal.ProteinTertiaryHBondSizeEvent.class);
		getAdapter().addHandled(molecule.ui.protein.tertiary.signal.ProteinTertiarySSBondTranslucencyEvent.class);
		getAdapter().addHandled(molecule.ui.protein.tertiary.signal.ProteinTertiarySizeEvent.class);
		getAdapter().addHandled(molecule.ui.protein.tertiary.signal.ProteinTertiaryTranslucencyEvent.class);
		getAdapter().addHandled(molecule.ui.protein.tertiary.signal.ProteinTertiaryRenderingModeEvent.class);
		getAdapter().addHandled(molecule.ui.protein.tertiary.signal.ProteinTertiaryBondTranslucencyEvent.class);
	}
	 
	public void eventRaised(final star.event.Event event)
	{
		eventRaisedHandles(event);
	}
	 
	private void eventRaisedHandles(final star.event.Event event)
	{
		if( event.getClass().getName().equals( "molecule.ui.protein.tertiary.signal.ProteinTertiaryHBondTranslucencyEvent" ) && event.isValid() ) 
		{
			 utils.Runner.runOnThread(new Runnable() { public void run() { 
			 long start = System.nanoTime();
			handleProteinTertiaryHBondTranslucencyRaiser( (molecule.ui.protein.tertiary.signal.ProteinTertiaryHBondTranslucencyRaiser)event.getSource());
			 long end = System.nanoTime();
			 if( end - start > 500000000 ) { System.out.println( this.getClass().getName() + ".handleProteinTertiaryHBondTranslucencyRaiser "  + ( end-start )/1000000 ); } }},this,2);
		}if( event.getClass().getName().equals( "molecule.ui.protein.tertiary.signal.ProteinTertiaryFilterEvent" ) && event.isValid() ) 
		{
			 utils.Runner.runOnThread(new Runnable() { public void run() { 
			 long start = System.nanoTime();
			handleProteinTertiaryFilterRaiser( (molecule.ui.protein.tertiary.signal.ProteinTertiaryFilterRaiser)event.getSource());
			 long end = System.nanoTime();
			 if( end - start > 500000000 ) { System.out.println( this.getClass().getName() + ".handleProteinTertiaryFilterRaiser "  + ( end-start )/1000000 ); } }},this,2);
		}if( event.getClass().getName().equals( "molecule.ui.protein.tertiary.signal.ProteinTertiarySSBondSizeEvent" ) && event.isValid() ) 
		{
			 utils.Runner.runOnThread(new Runnable() { public void run() { 
			 long start = System.nanoTime();
			handleProteinTertiarySSBondSizeRaiser( (molecule.ui.protein.tertiary.signal.ProteinTertiarySSBondSizeRaiser)event.getSource());
			 long end = System.nanoTime();
			 if( end - start > 500000000 ) { System.out.println( this.getClass().getName() + ".handleProteinTertiarySSBondSizeRaiser "  + ( end-start )/1000000 ); } }},this,2);
		}if( event.getClass().getName().equals( "molecule.ui.protein.tertiary.signal.ProteinTertiarySelectionEvent" ) && event.isValid() ) 
		{
			 utils.Runner.runOnThread(new Runnable() { public void run() { 
			 long start = System.nanoTime();
			handleProteinTertiarySelectionRaiser( (molecule.ui.protein.tertiary.signal.ProteinTertiarySelectionRaiser)event.getSource());
			 long end = System.nanoTime();
			 if( end - start > 500000000 ) { System.out.println( this.getClass().getName() + ".handleProteinTertiarySelectionRaiser "  + ( end-start )/1000000 ); } }},this,2);
		}if( event.getClass().getName().equals( "molecule.ui.protein.primary.signal.ProteinPrimaryFilterEvent" ) && event.isValid() ) 
		{
			 utils.Runner.runOnThread(new Runnable() { public void run() { 
			 long start = System.nanoTime();
			handleProteinPrimaryFilterRaiser( (molecule.ui.protein.primary.signal.ProteinPrimaryFilterRaiser)event.getSource());
			 long end = System.nanoTime();
			 if( end - start > 500000000 ) { System.out.println( this.getClass().getName() + ".handleProteinPrimaryFilterRaiser "  + ( end-start )/1000000 ); } }},this,2);
		}if( event.getClass().getName().equals( "molecule.ui.protein.tertiary.signal.ProteinTertiaryApplyRenderingEvent" ) && event.isValid() ) 
		{
			 utils.Runner.runOnThread(new Runnable() { public void run() { 
			 long start = System.nanoTime();
			handleProteinTertiaryApplyRenderingRaiser( (molecule.ui.protein.tertiary.signal.ProteinTertiaryApplyRenderingRaiser)event.getSource());
			 long end = System.nanoTime();
			 if( end - start > 500000000 ) { System.out.println( this.getClass().getName() + ".handleProteinTertiaryApplyRenderingRaiser "  + ( end-start )/1000000 ); } }},this,2);
		}if( event.getClass().getName().equals( "molecule.ui.protein.primary.signal.ProteinPrimaryRenderingModeEvent" ) && event.isValid() ) 
		{
			 utils.Runner.runOnThread(new Runnable() { public void run() { 
			 long start = System.nanoTime();
			handleProteinPrimaryRenderingModeRaiser( (molecule.ui.protein.primary.signal.ProteinPrimaryRenderingModeRaiser)event.getSource());
			 long end = System.nanoTime();
			 if( end - start > 500000000 ) { System.out.println( this.getClass().getName() + ".handleProteinPrimaryRenderingModeRaiser "  + ( end-start )/1000000 ); } }},this,2);
		}if( event.getClass().getName().equals( "molecule.ui.protein.tertiary.signal.ProteinTertiaryHBondSizeEvent" ) && event.isValid() ) 
		{
			 utils.Runner.runOnThread(new Runnable() { public void run() { 
			 long start = System.nanoTime();
			handleProteinTertiaryHBondSizeRaiser( (molecule.ui.protein.tertiary.signal.ProteinTertiaryHBondSizeRaiser)event.getSource());
			 long end = System.nanoTime();
			 if( end - start > 500000000 ) { System.out.println( this.getClass().getName() + ".handleProteinTertiaryHBondSizeRaiser "  + ( end-start )/1000000 ); } }},this,2);
		}if( event.getClass().getName().equals( "molecule.ui.protein.tertiary.signal.ProteinTertiarySSBondTranslucencyEvent" ) && event.isValid() ) 
		{
			 utils.Runner.runOnThread(new Runnable() { public void run() { 
			 long start = System.nanoTime();
			handleProteinTertiarySSBondTranslucencyRaiser( (molecule.ui.protein.tertiary.signal.ProteinTertiarySSBondTranslucencyRaiser)event.getSource());
			 long end = System.nanoTime();
			 if( end - start > 500000000 ) { System.out.println( this.getClass().getName() + ".handleProteinTertiarySSBondTranslucencyRaiser "  + ( end-start )/1000000 ); } }},this,2);
		}if( event.getClass().getName().equals( "molecule.ui.protein.tertiary.signal.ProteinTertiarySizeEvent" ) && event.isValid() ) 
		{
			 utils.Runner.runOnThread(new Runnable() { public void run() { 
			 long start = System.nanoTime();
			handleProteinTertiarySizeRaiser( (molecule.ui.protein.tertiary.signal.ProteinTertiarySizeRaiser)event.getSource());
			 long end = System.nanoTime();
			 if( end - start > 500000000 ) { System.out.println( this.getClass().getName() + ".handleProteinTertiarySizeRaiser "  + ( end-start )/1000000 ); } }},this,2);
		}if( event.getClass().getName().equals( "molecule.ui.protein.tertiary.signal.ProteinTertiaryTranslucencyEvent" ) && event.isValid() ) 
		{
			 utils.Runner.runOnThread(new Runnable() { public void run() { 
			 long start = System.nanoTime();
			handleProteinTertiaryTranslucencyRaiser( (molecule.ui.protein.tertiary.signal.ProteinTertiaryTranslucencyRaiser)event.getSource());
			 long end = System.nanoTime();
			 if( end - start > 500000000 ) { System.out.println( this.getClass().getName() + ".handleProteinTertiaryTranslucencyRaiser "  + ( end-start )/1000000 ); } }},this,2);
		}if( event.getClass().getName().equals( "molecule.ui.protein.tertiary.signal.ProteinTertiaryRenderingModeEvent" ) && event.isValid() ) 
		{
			 utils.Runner.runOnThread(new Runnable() { public void run() { 
			 long start = System.nanoTime();
			handleProteinTertiaryRenderingModeRaiser( (molecule.ui.protein.tertiary.signal.ProteinTertiaryRenderingModeRaiser)event.getSource());
			 long end = System.nanoTime();
			 if( end - start > 500000000 ) { System.out.println( this.getClass().getName() + ".handleProteinTertiaryRenderingModeRaiser "  + ( end-start )/1000000 ); } }},this,2);
		}if( event.getClass().getName().equals( "molecule.ui.protein.tertiary.signal.ProteinTertiaryBondTranslucencyEvent" ) && event.isValid() ) 
		{
			 utils.Runner.runOnThread(new Runnable() { public void run() { 
			 long start = System.nanoTime();
			handleProteinTertiaryBondTranslucencyRaiser( (molecule.ui.protein.tertiary.signal.ProteinTertiaryBondTranslucencyRaiser)event.getSource());
			 long end = System.nanoTime();
			 if( end - start > 500000000 ) { System.out.println( this.getClass().getName() + ".handleProteinTertiaryBondTranslucencyRaiser "  + ( end-start )/1000000 ); } }},this,2);
		}
	}
	 
	public java.util.prefs.Preferences getPreferences(java.lang.String name)
	{
		try
		{
			plugin.preferences.Preferences pref = (plugin.preferences.Preferences) plugin.Loader.getDefaultLoader().getPlugin(plugin.preferences.Preferences.class.getName(), plugin.preferences.PreferencesImplementation.class.getName());
			this.preferences = pref.getPreferences(name);
		}
		catch( plugin.PluginException ex )
		{
			ex.printStackTrace();
		}
		return preferences;
	}
	 
	public java.util.prefs.Preferences getPreferences()
	{
		if( preferences == null )
		{
			try
			{
				plugin.preferences.Preferences pref = (plugin.preferences.Preferences) plugin.Loader.getDefaultLoader().getPlugin(plugin.preferences.Preferences.class.getName(), plugin.preferences.PreferencesImplementation.class.getName());
				this.preferences = pref.getPreferences("molecule.ui.protein.tertiary.ProteinTertiaryPanel");
			}
			catch( plugin.PluginException ex )
			{
				ex.printStackTrace();
			}
		}
		return preferences;
	}
	 
	abstract void handleProteinPrimaryFilterRaiser(molecule.ui.protein.primary.signal.ProteinPrimaryFilterRaiser raiser);
	 
	abstract void handleProteinPrimaryRenderingModeRaiser(molecule.ui.protein.primary.signal.ProteinPrimaryRenderingModeRaiser raiser);
	 
	abstract void handleProteinTertiaryApplyRenderingRaiser(molecule.ui.protein.tertiary.signal.ProteinTertiaryApplyRenderingRaiser raiser);
	 
	abstract void handleProteinTertiaryBondTranslucencyRaiser(molecule.ui.protein.tertiary.signal.ProteinTertiaryBondTranslucencyRaiser raiser);
	 
	abstract void handleProteinTertiaryFilterRaiser(molecule.ui.protein.tertiary.signal.ProteinTertiaryFilterRaiser raiser);
	 
	abstract void handleProteinTertiaryHBondSizeRaiser(molecule.ui.protein.tertiary.signal.ProteinTertiaryHBondSizeRaiser raiser);
	 
	abstract void handleProteinTertiaryHBondTranslucencyRaiser(molecule.ui.protein.tertiary.signal.ProteinTertiaryHBondTranslucencyRaiser raiser);
	 
	abstract void handleProteinTertiaryRenderingModeRaiser(molecule.ui.protein.tertiary.signal.ProteinTertiaryRenderingModeRaiser raiser);
	 
	abstract void handleProteinTertiarySSBondSizeRaiser(molecule.ui.protein.tertiary.signal.ProteinTertiarySSBondSizeRaiser raiser);
	 
	abstract void handleProteinTertiarySSBondTranslucencyRaiser(molecule.ui.protein.tertiary.signal.ProteinTertiarySSBondTranslucencyRaiser raiser);
	 
	abstract void handleProteinTertiarySelectionRaiser(molecule.ui.protein.tertiary.signal.ProteinTertiarySelectionRaiser raiser);
	 
	abstract void handleProteinTertiarySizeRaiser(molecule.ui.protein.tertiary.signal.ProteinTertiarySizeRaiser raiser);
	 
	abstract void handleProteinTertiaryTranslucencyRaiser(molecule.ui.protein.tertiary.signal.ProteinTertiaryTranslucencyRaiser raiser);
	 
	public void raise_RenderingInfoEvent()
	{
		(new molecule.ui.signal.RenderingInfoEvent(this)).raise();
	}
	 
	public void removeNotify()
	{
		super.removeNotify();
		getAdapter().removeHandled(molecule.ui.protein.tertiary.signal.ProteinTertiaryHBondTranslucencyEvent.class);
		getAdapter().removeHandled(molecule.ui.protein.tertiary.signal.ProteinTertiaryFilterEvent.class);
		getAdapter().removeHandled(molecule.ui.protein.tertiary.signal.ProteinTertiarySSBondSizeEvent.class);
		getAdapter().removeHandled(molecule.ui.protein.tertiary.signal.ProteinTertiarySelectionEvent.class);
		getAdapter().removeHandled(molecule.ui.protein.primary.signal.ProteinPrimaryFilterEvent.class);
		getAdapter().removeHandled(molecule.ui.protein.tertiary.signal.ProteinTertiaryApplyRenderingEvent.class);
		getAdapter().removeHandled(molecule.ui.protein.primary.signal.ProteinPrimaryRenderingModeEvent.class);
		getAdapter().removeHandled(molecule.ui.protein.tertiary.signal.ProteinTertiaryHBondSizeEvent.class);
		getAdapter().removeHandled(molecule.ui.protein.tertiary.signal.ProteinTertiarySSBondTranslucencyEvent.class);
		getAdapter().removeHandled(molecule.ui.protein.tertiary.signal.ProteinTertiarySizeEvent.class);
		getAdapter().removeHandled(molecule.ui.protein.tertiary.signal.ProteinTertiaryTranslucencyEvent.class);
		getAdapter().removeHandled(molecule.ui.protein.tertiary.signal.ProteinTertiaryRenderingModeEvent.class);
		getAdapter().removeHandled(molecule.ui.protein.tertiary.signal.ProteinTertiaryBondTranslucencyEvent.class);
	}
	 
}
/* Generated by star.annotations.GeneratedClass, all changes will be lost */

package molecule.ui.protein.tertiary;

public abstract class ProteinTertiaryFilters_generated extends molecule.ui.AbstractFiltersUI implements molecule.ui.protein.tertiary.signal.ProteinTertiaryFilterRaiser, star.event.EventController, star.event.Listener
{
	private java.util.prefs.Preferences preferences = null;
	private static final long serialVersionUID = 1L;

	public  ProteinTertiaryFilters_generated()
	{
		super();
	}
	 
	public void addNotify()
	{
		super.addNotify();
		getAdapter().addHandled(molecule.ui.protein.primary.signal.ProteinPrimaryFilterEvent.class);
	}
	 
	public void eventRaised(final star.event.Event event)
	{
		eventRaisedHandles(event);
	}
	 
	private void eventRaisedHandles(final star.event.Event event)
	{
		if( event.getClass().getName().equals( "molecule.ui.protein.primary.signal.ProteinPrimaryFilterEvent" ) && event.isValid() ) 
		{
			 utils.Runner.runOnThread(new Runnable() { public void run() { 
			 long start = System.nanoTime();
			handleProteinPrimaryFilterRaiser( (molecule.ui.protein.primary.signal.ProteinPrimaryFilterRaiser)event.getSource());
			 long end = System.nanoTime();
			 if( end - start > 500000000 ) { System.out.println( this.getClass().getName() + ".handleProteinPrimaryFilterRaiser "  + ( end-start )/1000000 ); } }},this,2);
		}
	}
	 
	public java.util.prefs.Preferences getPreferences(java.lang.String name)
	{
		try
		{
			plugin.preferences.Preferences pref = (plugin.preferences.Preferences) plugin.Loader.getDefaultLoader().getPlugin(plugin.preferences.Preferences.class.getName(), plugin.preferences.PreferencesImplementation.class.getName());
			this.preferences = pref.getPreferences(name);
		}
		catch( plugin.PluginException ex )
		{
			ex.printStackTrace();
		}
		return preferences;
	}
	 
	public java.util.prefs.Preferences getPreferences()
	{
		if( preferences == null )
		{
			try
			{
				plugin.preferences.Preferences pref = (plugin.preferences.Preferences) plugin.Loader.getDefaultLoader().getPlugin(plugin.preferences.Preferences.class.getName(), plugin.preferences.PreferencesImplementation.class.getName());
				this.preferences = pref.getPreferences("molecule.ui.protein.tertiary.ProteinTertiaryFilters");
			}
			catch( plugin.PluginException ex )
			{
				ex.printStackTrace();
			}
		}
		return preferences;
	}
	 
	abstract void handleProteinPrimaryFilterRaiser(molecule.ui.protein.primary.signal.ProteinPrimaryFilterRaiser raiser);
	 
	public void raise_ProteinTertiaryFilterEvent()
	{
		(new molecule.ui.protein.tertiary.signal.ProteinTertiaryFilterEvent(this)).raise();
	}
	 
	public void removeNotify()
	{
		super.removeNotify();
		getAdapter().removeHandled(molecule.ui.protein.primary.signal.ProteinPrimaryFilterEvent.class);
	}
	 
}
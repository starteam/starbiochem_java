/* Generated by star.annotations.GeneratedClass, all changes will be lost */

package molecule.ui.protein.tertiary;

public abstract class ProteinTertiaryList_generated extends javax.swing.JList implements molecule.ui.protein.tertiary.signal.ProteinTertiarySelectionRaiser, star.event.EventController, star.event.Listener
{
	private star.event.Adapter adapter;
	private static final long serialVersionUID = 1L;

	public  ProteinTertiaryList_generated()
	{
		super();
	}
	 
	public  ProteinTertiaryList_generated(java.lang.Object[] object)
	{
		super( object);
	}
	 
	public  ProteinTertiaryList_generated(java.util.Vector vector)
	{
		super( vector);
	}
	 
	public  ProteinTertiaryList_generated(javax.swing.ListModel listModel)
	{
		super( listModel);
	}
	 
	public void addNotify()
	{
		super.addNotify();
		getAdapter().addHandled(molecule.ui.protein.tertiary.signal.ProteinTertiaryFilterEvent.class);
		getAdapter().addHandled(molecule.ui.protein.primary.signal.ProteinPrimarySelectionEvent.class);
	}
	 
	public void eventRaised(final star.event.Event event)
	{
		eventRaisedHandles(event);
	}
	 
	private void eventRaisedHandles(final star.event.Event event)
	{
		if( event.getClass().getName().equals( "molecule.ui.protein.tertiary.signal.ProteinTertiaryFilterEvent" ) && event.isValid() ) 
		{
			 utils.Runner.runOnThread(new Runnable() { public void run() { 
			 long start = System.nanoTime();
			handleProteinTertiaryFilterRaiser( (molecule.ui.protein.tertiary.signal.ProteinTertiaryFilterRaiser)event.getSource());
			 long end = System.nanoTime();
			 if( end - start > 500000000 ) { System.out.println( this.getClass().getName() + ".handleProteinTertiaryFilterRaiser "  + ( end-start )/1000000 ); } }},this,2);
		}if( event.getClass().getName().equals( "molecule.ui.protein.primary.signal.ProteinPrimarySelectionEvent" ) && event.isValid() ) 
		{
			 utils.Runner.runOnThread(new Runnable() { public void run() { 
			 long start = System.nanoTime();
			handleProteinPrimarySelectionRaiser( (molecule.ui.protein.primary.signal.ProteinPrimarySelectionRaiser)event.getSource());
			 long end = System.nanoTime();
			 if( end - start > 500000000 ) { System.out.println( this.getClass().getName() + ".handleProteinPrimarySelectionRaiser "  + ( end-start )/1000000 ); } }},this,2);
		}
	}
	 
	public star.event.Adapter getAdapter()
	{
		if( adapter == null )
		{
			adapter = new star.event.Adapter(this);
		}
		return adapter;
	}
	 
	abstract void handleProteinPrimarySelectionRaiser(molecule.ui.protein.primary.signal.ProteinPrimarySelectionRaiser raiser);
	 
	abstract void handleProteinTertiaryFilterRaiser(molecule.ui.protein.tertiary.signal.ProteinTertiaryFilterRaiser raiser);
	 
	public void raise_ProteinTertiarySelectionEvent()
	{
		(new molecule.ui.protein.tertiary.signal.ProteinTertiarySelectionEvent(this)).raise();
	}
	 
	public void removeNotify()
	{
		super.removeNotify();
		getAdapter().removeHandled(molecule.ui.protein.tertiary.signal.ProteinTertiaryFilterEvent.class);
		getAdapter().removeHandled(molecule.ui.protein.primary.signal.ProteinPrimarySelectionEvent.class);
	}
	 
}
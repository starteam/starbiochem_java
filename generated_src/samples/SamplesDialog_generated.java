/* Generated by star.annotations.GeneratedClass, all changes will be lost */

package samples;

public abstract class SamplesDialog_generated extends javax.swing.JDialog implements app.signal.SampleOpenRaiser, star.event.EventController
{
	private star.event.Adapter adapter;
	private java.util.prefs.Preferences preferences = null;
	private static final long serialVersionUID = 1L;

	public  SamplesDialog_generated()
	{
		super();
	}
	 
	public  SamplesDialog_generated(java.awt.Dialog dialog, boolean boolean0)
	{
		super( dialog,boolean0);
	}
	 
	public  SamplesDialog_generated(java.awt.Dialog dialog, java.lang.String string, boolean boolean0, java.awt.GraphicsConfiguration graphicsConfiguration)
	{
		super( dialog,string,boolean0,graphicsConfiguration);
	}
	 
	public  SamplesDialog_generated(java.awt.Dialog dialog, java.lang.String string, boolean boolean0)
	{
		super( dialog,string,boolean0);
	}
	 
	public  SamplesDialog_generated(java.awt.Dialog dialog, java.lang.String string)
	{
		super( dialog,string);
	}
	 
	public  SamplesDialog_generated(java.awt.Dialog dialog)
	{
		super( dialog);
	}
	 
	public  SamplesDialog_generated(java.awt.Frame frame, boolean boolean0)
	{
		super( frame,boolean0);
	}
	 
	public  SamplesDialog_generated(java.awt.Frame frame, java.lang.String string, boolean boolean0, java.awt.GraphicsConfiguration graphicsConfiguration)
	{
		super( frame,string,boolean0,graphicsConfiguration);
	}
	 
	public  SamplesDialog_generated(java.awt.Frame frame, java.lang.String string, boolean boolean0)
	{
		super( frame,string,boolean0);
	}
	 
	public  SamplesDialog_generated(java.awt.Frame frame, java.lang.String string)
	{
		super( frame,string);
	}
	 
	public  SamplesDialog_generated(java.awt.Frame frame)
	{
		super( frame);
	}
	 
	public  SamplesDialog_generated(java.awt.Window window, java.awt.Dialog.ModalityType modalityType)
	{
		super( window,modalityType);
	}
	 
	public  SamplesDialog_generated(java.awt.Window window, java.lang.String string, java.awt.Dialog.ModalityType modalityType, java.awt.GraphicsConfiguration graphicsConfiguration)
	{
		super( window,string,modalityType,graphicsConfiguration);
	}
	 
	public  SamplesDialog_generated(java.awt.Window window, java.lang.String string, java.awt.Dialog.ModalityType modalityType)
	{
		super( window,string,modalityType);
	}
	 
	public  SamplesDialog_generated(java.awt.Window window, java.lang.String string)
	{
		super( window,string);
	}
	 
	public  SamplesDialog_generated(java.awt.Window window)
	{
		super( window);
	}
	 
	public void addNotify()
	{
		super.addNotify();
	}
	 
	public star.event.Adapter getAdapter()
	{
		if( adapter == null )
		{
			adapter = new star.event.Adapter(this);
		}
		return adapter;
	}
	 
	public java.util.prefs.Preferences getPreferences(java.lang.String name)
	{
		try
		{
			plugin.preferences.Preferences pref = (plugin.preferences.Preferences) plugin.Loader.getDefaultLoader().getPlugin(plugin.preferences.Preferences.class.getName(), plugin.preferences.PreferencesImplementation.class.getName());
			this.preferences = pref.getPreferences(name);
		}
		catch( plugin.PluginException ex )
		{
			ex.printStackTrace();
		}
		return preferences;
	}
	 
	public java.util.prefs.Preferences getPreferences()
	{
		if( preferences == null )
		{
			try
			{
				plugin.preferences.Preferences pref = (plugin.preferences.Preferences) plugin.Loader.getDefaultLoader().getPlugin(plugin.preferences.Preferences.class.getName(), plugin.preferences.PreferencesImplementation.class.getName());
				this.preferences = pref.getPreferences("samples.SamplesDialog");
			}
			catch( plugin.PluginException ex )
			{
				ex.printStackTrace();
			}
		}
		return preferences;
	}
	 
	public void raise_SampleOpenEvent()
	{
		(new app.signal.SampleOpenEvent(this)).raise();
	}
	 
	public void removeNotify()
	{
		super.removeNotify();
	}
	 
}